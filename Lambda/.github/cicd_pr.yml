name: Lambda CI/CD
# on: pull_request
#on:
#  push:
on:
  pull_request:
    branches:
      - Lambda/*
  push:
    branches:
      - Lambda/*

jobs:
  pytest_docker_ecr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository # must checkout!
        uses: actions/checkout@v3

#      - name: Setup python
#        uses: actions/setup-python@v4
#      - name: Change directory, Build environment
#        run: |
#          cd Lambda
#          pip install --no-cache-dir -r requirements.txt

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY_SENTIMENTAL_GITHUBACTIONS_UPLOADECR_UPDATELAMBDA }}
          aws-secret-access-key: ${{ secrets.SECRET_ACCESS_KEY_SENTIMENTAL_GITHUBACTIONS_UPLOADECR_UPDATELAMBDA }}
          aws-region: eu-west-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, Tag, Push Docker image to Amazon ECR
        id: build-push-ecr
        env:
          ecr_registry: ${{ steps.login-ecr.outputs.registry }}
          ecr_repository: sentimental
          image_tag: ${{ github.sha }}
        run: |
          # Build a docker container and push it to ECR
          cd Lambda # if Dockerfile nested in another directory
          echo "$ecr_registry"
          docker build -t $ecr_registry/$ecr_repository:$image_tag .
          echo "Pushing image to ECR..."
          echo "image_uri=$ecr_registry/$ecr_repository:$image_tag" >> "$GITHUB_OUTPUT" # variable to update Lambda, next step
          docker push $ecr_registry/$ecr_repository:$image_tag
          # if push keep retrying and fails, check IAM Policy https://github.com/aws-actions/amazon-ecr-login#docker-credentials

      - name: Update Lambda's Docker image
          id: update-lambda
          env:
            image_uri: ${{ steps.build-push-ecr.outputs.image_uri }}
          run: |
            echo "Updating lambda to use image $image_uri"
            aws lambda update-function-code --function-name sentimental --image-uri $image_uri

# DEPRECATED: old method of running Lambda from .zip file (with dependencies/layers nightmare), deprecate in favour of using Docker images
#Lambda:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout Repository # must checkout!
#        uses: actions/checkout@v2

#      - name: Install dependencies in Lambda folder
#        working-directory: ./Lambda
#        run: |
#          pip install -r requirements.txt --target .
#          zip -r lambda.zip .
#
#      - name: Deploy Lambda
#        uses: appleboy/lambda-action@master
#        with:
#          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          aws_region: eu-west-2
#          function_name: sentimental
#          zip_file: Lambda/lambda.zip